
* Git ommix

Git ommix helps managing high-dimensional data (eg: omics, imagery, pathology) in a longitudinal manner, coupled to a representation of the provenance using the PROV ontology.

Git ommix creates patient-level repositories to store sample references, versionned data obtained from the samples, and the versionned result of the data analysis and ensuing diagnoses.

Large files are only retrieved on demand thanks to *git annex*, decorrelating navigating the history from actually downloading all of it.

Git ommix also stores a representation of the provenance of each of those entities using the PROV ontology.
Git ommix allows querying the repository structure, implementing multiple useful operations. These operations can apply to the whole patient's history or be constrained to one or multiple specific objects (sample/data/result/diagnostic)
- list the objects contributing to the target (the data contributing to a result or to a diagnostic, samples contributing to diagnostics)
- get the most recent version of the target
- get the PROV-O prevenance of the target, as turtle triplets or as a visual graph
- display a timeline of diagnoses
- execute any sparQL query on a repo

** Requirements

GitOmmix is implemented as a bash script.
It relies mostly on *git*, but also uses:
- git annex (https://git-annex.branchable.com/) to handle large files
- rapper (https://librdf.org/raptor/rapper.html) to manage RDF stores
- graphviz (https://graphviz.org/) to generate visual representations

** Installation

Run ~sudo make install~ to install git ommix on your computer.

** Running tests

From the root directory of this repository, run ~tests/<name>.test~ to run test *name*.

